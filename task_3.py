"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
--- 1 способ ---
# O(n log n)- sorted
# изменяется словарь

profit = {'kdv': 2010,
          'ntk': 5200,
          'ast': 506,
          'rsn': 235,
          'ssh': 4567,
          'cnk': 2453,
          'rfg': 1759
          }
          # O(1)

c = for c in sorted(profit.items(), key=lambda kv: (kv[1], kv[0]), reverse=True):
    print(c[0, 1, 2])


    
--- 2 способ ---
# O(log n)

from operator import attrgetter


class Profit:
    def __init__(self, name, income):
        self.name = name
        self.income = income

    def __repr__(self):
        return repr((self.name, self.income))

# O(1)
profit_objects = [
    Profit('kdv', 2010),
    Profit('ntk', 5200),
    Profit('ast', 506),
    Profit('rsn', 235),
    Profit('ssh', 4567),
    Profit('cnk', 2453),
    Profit('rfg', 1759),
]
s = sorted(profit_objects, key=attrgetter('income'), reverse=True)
print(s[:3])

--- Второй способ лучше, т. к. attrgetter проще в исполнении ---
